<%-
# Specify admin groups by the full name of the group in the production HKey environment.
adminGroups = [
  "ondemand-admins-1025174" # HUIT OOD admin group, prod environment
]
# Specify course groups by Canvas course ID, which you can find in a url:
# canvas.harvard.edu/courses/000000
enabledGroups = [
  "135510"
]

def arrays_have_common_element(array1, array2)
  # Use the `&` operator to get the intersection of the two arrays
  # If the intersection is not empty, return true, otherwise false
  !(array1 & array2).empty?
end

userGroups = OodSupport::User.new.groups.sort_by(&:id).map(&:name)
# First check if the user is in an admin group
if arrays_have_common_element(userGroups, adminGroups)
  cluster="*"
else
  # If the user is not in an admin group, check if they're in an authorized Canvas group
  userCanvasGroups = userGroups.flat_map{ |str| str.scan(/^canvas(\d+)-\d+/) }.flatten

  # Check if the groups that the user is in match any of the courses that should
  # have access to this app.

  if arrays_have_common_element(userCanvasGroups, enabledGroups)
    cluster="*"
  else
    cluster="disable_this_app"
  end
end
-%>

---
cluster: "<%= cluster %>"
title: "RStudio - Generic"

attributes:
  imagefile: rstudio-base.sif
  custom_num_cores:
    widget: "number_field"
    label: "Number of CPUs"
    value: 1
    min: 1
    max: 4
    step: 1
form:
  - custom_num_cores
  - bc_num_hours
  - imagefile
